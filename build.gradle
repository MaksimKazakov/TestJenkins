plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.3'
}

group 'ru.3dkazakov'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    allureVersion = '2.24.0'
    junitVersion = '5.10.0'
    selenideVersion = '7.2.1'
    slf4jVersion = '2.0.12'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}




dependencies {
    testImplementation("com.codeborne:selenide:${selenideVersion}")
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation("org.slf4j:slf4j-simple:${slf4jVersion}")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}
test {
    //systemProperty("chromeoptions.prefs", "intl.accept_languages=de")
    useJUnitPlatform()
}
allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}

//task simple_test(type: Test){
//    useJUnitPlatform{
//        includeTags('simple')
//    }
//}